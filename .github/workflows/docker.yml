name: Docker CI/CD

on:
  push:
    branches:
      - feature-jm-sysadm #main
      #- '**'
jobs:
    DockerBuild:
        runs-on: ubuntu-latest
        steps:
        
        - name: Checkout code
          uses: actions/checkout@v4
          with:
              fetch-depth: 0
        
        - name: Install Dependency project with NPM
          run: npm install

        - name: Build project with NPM
          run: npm build
            ls -R

        - name: List Directory
          run: ls -R

        - name: Docker Login
          uses: docker/login-action@v3.0.0
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Download JAR
          run: |
            echo "En construcción - Download JAR"
          # uses: actions/download-artifact@master
          # with:
          #   name: JAR
          #   path: ${{github.workspace}}
    
        - name: Docker Build
          run: |
            echo "En construcción - Push Docker"
          # run: |
          #   ls -R
          #   docker build --tag b4b4y4g4x/cursodevsecops-test:latest .
    
        - name: Push Docker
          run: |
            echo "En construcción - Push Docker"
          # run: |
          #   docker push b4b4y4g4x/cursodevsecops-test:latest
    
    DockerScan:
        needs: DockerBuild
        runs-on: ubuntu-latest
        steps:
        
        - name: Docker Login
          uses: docker/login-action@v3.0.0
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Pull Docker
          run: |
            echo "En construcción - Pull Docker"
          # run: |
          #   docker pull b4b4y4g4x/cursodevsecops-test:latest
    
        - name: Run Trivy Scan
          run: |
            echo "En construcción - Docker Scan"
          # uses: aquasecurity/trivy-action@master
          # with:
          #   image-ref: 'b4b4y4g4x/cursodevsecops-test:latest'
          #   format: 'table'
    
    Deploy:
        needs: DockerScan
        runs-on: ubuntu-latest
        steps:
          - name: Ejecución de Proceso de despliegue de código
            run: |
              echo "En construcción - Docker Scan"
        